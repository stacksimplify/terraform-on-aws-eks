# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      - localhost:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  #- "rules/myrules.yml"
  - "rules/linuxrules.yml"
  - "rules/windowsrules.yml"
  - "rules/webrules.yml"
  
# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
    - targets: ['localhost:9090']
    
  - job_name: 'node_exporter'
    static_configs:
    - targets: ['localhost:9100']
  
    
  - job_name: 'wmi_exporter'
    static_configs:
    - targets: ['192.168.87.1:9182']
    
  - job_name: 'prom_python_app'
    static_configs:
    - targets: ['localhost:8001'] 
    
  #- job_name: 'prom_go_app'
    #static_configs:
    #- targets: ['localhost:8000'] 

  - job_name: 'blackbox_exporter'
    static_configs:
    - targets: ['localhost:9115'] 

  - job_name: 'prometheus-website'
    static_configs:
    - targets:
      - prometheus.io
    metrics_path: /probe
    params:
      module:
      - http_ipv4 

    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: localhost:9115  # The blackbox exporter's real hostname:port.